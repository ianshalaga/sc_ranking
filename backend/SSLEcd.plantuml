@startuml
class Game {
    - name : String
    - code_name : String
}

class Platform {
    - name : String
    - code_name : String
}

class Region {
    - name : String
    - code_name : String
}

class EventType {
    - name : String
    - code_name : String
}

class DuelType {
    - name : String
    - code_name : String
    - name_synonymous : String
    - code_name_synonymous : String
}

class Player {
    - name : String
    - playlist : String
    - points_earned : Float
    + team_duels_played() : Integer
    + team_duels_won() : Integer
    + team_duels_lost() : Integer
    + duels_played() : Integer
    + duels_won() : Integer
    + duels_lost() : Integer
    + battles_played() : Integer
    + battles_won() : Integer
    + battles_lost() : Integer
    + battles_draw() : Integer
    + team_duels_win_rate() : Float
    + duels_win_rate() : Float
    + battles_win_rate() : Float
    + team_duels_wlr() : Float
    + duels_wlr() : Float
    + battles_wlr() : Float
    + points_earned() : Float
    + player_level() : Float
}

class Character {
    - name : String
    - playlist : String
    + played_battles() : Integer
    + won_battles() : Integer
    + lost_battles() : Integer
    + draw_battles() : Integer
    + win_rate() : Float
    + wlr() : Float
    + points_earned() : Float
    + player_level() : Float
}

class GameVersionPlatform {
    - version : String
}

Game "1" --- "1..*" GameVersionPlatform
Platform "1" -- "1..*" GameVersionPlatform


class SocialMedia {
    - link : String
}

Player "1" *-- "0..*" SocialMedia : Have >

class PlayerCharacter {
    + played_battles() : Integer
    + won_battles() : Integer
    + lost_battles() : Integer
    + draw_battles() : Integer
    + win_rate() : Float
    + wlr() : Float
    + points_earned() : Float
    + player_level() : Float
}

PlayerCharacter "0..*" -- "1" Character
PlayerCharacter "0..*" -- "1" Player


class Event {
    - name : String
    - code_name : String
    - playlist : String
    - bracket : String
    - date : Date
    + teams() : List
    + players(): List
    + characters() : List
    + played_duels() : Integer
    + played_battles() : Integer
    + results() : List
}

Event "1..*" -- "1" EventType : Is of >
Event "1..*" -- "1" Region : Belongs >
Event "1..*" -- "1" GameVersionPlatform : Is played >

class Duel {
    - duel_order : Integer
    - video : String
    + teams() : List
    + players() : List
    + player_winner() : String
    + team_winner() : String
}

Duel "1..*" -- "1" DuelType : Is of >
Duel "1..*" --* "1" Event : Belongs >
Event "1" *-- "2..*" Team : Participate >

class Team {
    - name : String
    - initials : String
    + players() : List
    + duels_played() : Integer
    + duels_won() : Integer
    + duels_lost() : Integer
    + win_rate() : Float
    + wlr() : Float
    + points_earned() : Float
    + team_level() : Float
}

Team "0..*" -- "2..*" Player

class Combat {
    - combat_order : Integer
    + get_player(Integer) : Player
    + rounds_played() : Integer
    + won_rounds_player(Player) : Integer
    + raw_points_player(Player) : Integer
    + beating_factor_player(Player) : Float
    + won_points_player(Player) : Float
    + result_player(Player) : CombatResult
    + winner() : Player
}

Combat "1..*" -- "1" Player : Player1 >
Combat "1..*" -- "1" Player : Player2 >
Combat "1..*" -- "1" Character : Character1 >
Combat "1..*" -- "1" Character : Character2 >
Combat "1..*" --* "1" Duel : Belongs >

enum CombatResult {
    Victory
    Defeat
    Draw
}

enum RoundResult {
    W
    PW
    LB
    LY
    PL
    D
}

class Round {
    - round_order : Integer
    - result_player1 : RoundResult
    - result_player2 : RoundResult
    + points_player1() : Integer
    + points_player2() : Integer
}

Round "1..*" --* "1" Combat : Belongs >

class Main {
    + create_database() : void
    + generate_ranking() : void
    + event_result(): void
}

Main "1" -- "0..*" Event : Have >

enum RankingType {
    PL
    CH
    PLCH
}
@enduml